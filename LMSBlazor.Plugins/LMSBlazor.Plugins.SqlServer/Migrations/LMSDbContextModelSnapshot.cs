// <auto-generated />
using System;
using LMSBlazor.Plugins.SqlServer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LMSBlazor.Plugins.SqlServer.Migrations
{
    [DbContext(typeof(LMSDbContext))]
    partial class LMSDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("LMSBlazor.CoreBusiness.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<int>("EmployeeAge")
                        .HasColumnType("int");

                    b.Property<string>("EmployeeEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmployeeName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("EmployeePhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("TotalLeaveDays")
                        .HasColumnType("float");

                    b.HasKey("EmployeeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            EmployeeAge = 30,
                            EmployeeEmail = "amin@idwal.com.my",
                            EmployeeName = "Aminudin Ab Kahar",
                            EmployeePhoneNumber = "011-33272978",
                            HireDate = new DateTime(2022, 2, 18, 16, 3, 44, 437, DateTimeKind.Local).AddTicks(631),
                            TotalLeaveDays = 54.0
                        },
                        new
                        {
                            EmployeeId = 2,
                            EmployeeAge = 50,
                            EmployeeEmail = "mdNor@idwal.com.my",
                            EmployeeName = "Mohd Nor Bin Md Tan",
                            EmployeePhoneNumber = "",
                            HireDate = new DateTime(2003, 3, 2, 16, 3, 44, 437, DateTimeKind.Local).AddTicks(660),
                            TotalLeaveDays = 0.0
                        });
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.Employee_Leave", b =>
                {
                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<double>("DaysLeft")
                        .HasColumnType("float");

                    b.HasKey("LeaveId", "EmployeeId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Employee_Leaves");

                    b.HasData(
                        new
                        {
                            LeaveId = 1,
                            EmployeeId = 1,
                            DaysLeft = 12.0
                        },
                        new
                        {
                            LeaveId = 2,
                            EmployeeId = 1,
                            DaysLeft = 12.0
                        },
                        new
                        {
                            LeaveId = 4,
                            EmployeeId = 1,
                            DaysLeft = 30.0
                        });
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.Leave", b =>
                {
                    b.Property<int>("LeaveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveId"), 1L, 1);

                    b.Property<string>("LeaveName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.HasKey("LeaveId");

                    b.ToTable("Leaves");

                    b.HasData(
                        new
                        {
                            LeaveId = 1,
                            LeaveName = "Cuti Tahunan"
                        },
                        new
                        {
                            LeaveId = 2,
                            LeaveName = "Cuti Sakit"
                        },
                        new
                        {
                            LeaveId = 3,
                            LeaveName = "Cuti Bersalin (Perempuan)"
                        },
                        new
                        {
                            LeaveId = 4,
                            LeaveName = "Cuti Bersalin (Lelaki)"
                        });
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.LeaveApplication", b =>
                {
                    b.Property<int>("LeaveApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveApplicationId"), 1L, 1);

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateFrom")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateFromApplyType")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTo")
                        .HasColumnType("datetime2");

                    b.Property<int>("DateToApplyType")
                        .HasColumnType("int");

                    b.Property<string>("DoneBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<string>("LvNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalDays")
                        .HasColumnType("float");

                    b.HasKey("LeaveApplicationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveApplications");
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.LeaveApplicationLog", b =>
                {
                    b.Property<int>("LeaveApplicationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LeaveApplicationId"), 1L, 1);

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ApprovalType")
                        .HasColumnType("int");

                    b.Property<string>("DoneBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("LeaveId")
                        .HasColumnType("int");

                    b.Property<string>("LvNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalDaysAfter")
                        .HasColumnType("float");

                    b.Property<double>("TotalDaysBefore")
                        .HasColumnType("float");

                    b.HasKey("LeaveApplicationId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("LeaveId");

                    b.ToTable("LeaveApplicationLogs");
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.Employee_Leave", b =>
                {
                    b.HasOne("LMSBlazor.CoreBusiness.Employee", "Employee")
                        .WithMany("Employee_Leaves")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSBlazor.CoreBusiness.Leave", "Leave")
                        .WithMany("Employee_Leaves")
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.LeaveApplication", b =>
                {
                    b.HasOne("LMSBlazor.CoreBusiness.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSBlazor.CoreBusiness.Leave", "Leave")
                        .WithMany()
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.LeaveApplicationLog", b =>
                {
                    b.HasOne("LMSBlazor.CoreBusiness.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LMSBlazor.CoreBusiness.Leave", "Leave")
                        .WithMany()
                        .HasForeignKey("LeaveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Leave");
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.Employee", b =>
                {
                    b.Navigation("Employee_Leaves");
                });

            modelBuilder.Entity("LMSBlazor.CoreBusiness.Leave", b =>
                {
                    b.Navigation("Employee_Leaves");
                });
#pragma warning restore 612, 618
        }
    }
}
