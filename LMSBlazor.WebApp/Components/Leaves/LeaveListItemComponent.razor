@inject NavigationManager NavigationManager
@inject IViewLeaveByIdUseCase ViewLeaveByIdUseCase
@inject IDeleteLeaveUseCase DeleteLeaveUseCase

@if (Leaves != null && Leaves.Count > 0)
{
    foreach (var lv in Leaves)
    {
        <tr>
            <td>@lv.LeaveName</td>
            <td>
                <button type="button"
                        class="btn btn-light"
                        @onclick="@(() => EditLeave(lv.LeaveId))">
                    Ubah
                </button>
                <button type="button"
                        class="btn btn-danger"
                        @onclick="@(() => RemoveLeave(lv.LeaveId))">
                    Hapus
                </button>
            </td>
        </tr>
    }
}

@code {
    [Parameter]
    public List<Leave> Leaves { get; set; } = new List<Leave>();

    public void EditLeave(int leaveId)
    {
        NavigationManager.NavigateTo($"/editLeave/{leaveId}");
    }

    public async void RemoveLeave(int leaveId)
    {
        Leave lv = await ViewLeaveByIdUseCase.ExecuteAsync(leaveId);


        if (lv != null)
            await DeleteLeaveUseCase.ExecuteAsync(lv);

        NavigationManager.NavigateTo(NavigationManager.BaseUri + "leaves",forceLoad: true);
    }
}
