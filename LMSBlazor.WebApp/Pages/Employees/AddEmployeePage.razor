@page "/addEmployee"
@inject NavigationManager NavigationManager
@inject IAddEmployeeUseCase AddEmployeeUseCase

@attribute [Authorize(Policy = "HR")]

<h3>Tambah Pekerja Baru</h3>
<EditForm Model="employee" OnValidSubmit="SaveEmployee">
    <DataAnnotationsValidator></DataAnnotationsValidator>
    <ValidationSummary></ValidationSummary>
    <div class="form-group">
        <label class="form-label" for="name">Nama</label>
        <InputText id="name"
                   class="form-control"
                   @bind-Value="employee.EmployeeName">

        </InputText>
    </div>
    <div class="form-group">
        <label class="form-label" for="phoneNum">No Telefon</label>
        <InputText id="phoneNum"
                   @bind-Value="employee.EmployeePhoneNumber"
                   class="form-control">

        </InputText>
    </div>
    <div class="form-group">
        <label class="form-label" for="email">Emel</label>
        <InputText id="email"
                   @bind-Value="employee.EmployeeEmail"
                   class="form-control">

        </InputText>
    </div>
    <div class="form-group">
        <label class="form-label" for="hireDate">Tarikh Mula Bekerja</label>
        <InputDate id="hireDate"
                   @bind-Value="employee.HireDate"
                   class="form-control">

        </InputDate>
    </div>
    <div class="form-group">
        <label class="form-label" for="lvs">Jenis Cuti</label>
        <Employee_LeavesComponent Employee="this.employee" OnAmountChanged="OnAmountChanged"></Employee_LeavesComponent>
    </div>
    <br />

    <input hidden @bind-value="this.employee.TotalLeaveDays" />
    <button type="submit"
            class="btn btn-primary">
        Simpan
    </button>
    <button type="button"
            class="btn btn-light"
            @onclick="Cancel">
        Kembali
    </button>
</EditForm>
@code {
    private Employee employee = new Employee();

    private async Task SaveEmployee()
    {
        await AddEmployeeUseCase.ExecuteTask(employee);
        NavigationManager.NavigateTo(NavigationManager.BaseUri + "employees");
    }

    private void OnAmountChanged(double days)
    {
        if (this.employee != null)
            this.employee.TotalLeaveDays = days;
    }

    private void Cancel()
    {
        NavigationManager.NavigateTo(NavigationManager.BaseUri + "employees");
    }
}
